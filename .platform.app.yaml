# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: app

# The type of the application to build.
type: 'php:8.0'

# Indicate that we want to use composer2, (leave out if you want composer1)
dependencies:
    php: 
        composer/composer: '^2'

runtime:
    extensions:
        - redis

# The hooks that will be performed when the package is deployed.
hooks:
    build: |
        set -e
    deploy: |
        set -e
        php artisan migrate --force

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: "db:mysql"
    rediscache: "cache:redis"
    redissession: "cache:redis"

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
  "storage/app/public":
      source: local
      source_path: "public"
  "storage/framework/views":
      source: local
      source_path: "views"
  "storage/framework/sessions":
      source: local
      source_path: "sessions"
  "storage/framework/cache":
      source: local
      source_path: "cache"
  "storage/logs":
      source: local
      source_path: "logs"
  "bootstrap/cache":
      source: local
      source_path: "cache"
  "/.config":
      source: local
      source_path: "config"

# The configuration of app when it is exposed to the web.
web:
    locations:
        "/":
            root: "public"
            index:
                - index.php
            allow: true
            passthru: "/index.php"
        "/storage":
            root: "storage/app/public"
            scripts: false

crons:
    # Run Laravel's scheduler every 5 minutes, which is often as crons can run.
    scheduler:
        spec: '*/5 * * * *'
        cmd: 'php artisan schedule:run'
    # Run Laravel's queue worker task every 9 minutes
    queue:
        spec: '*/9 * * * *'
        # Allow the worker to run for up to 5 minutes. That prevents
        # a long-running queue from blocking a deploy for more than 5
        # minutes.
        cmd: 'php artisan queue:work --max-time=300'

# If you have an especially large queue, you may be better off using a worker.
# If so, comment out the `queue` cron entry and uncomment this instead. Note that
# Doing so requires a Medium plan or larger.
#workers:
#    queue:
#        size: S
#        commands:
#            # To minimize leakage, the queue worker will stop every hour
#            # and get restarted automatically.
#            start: |
#                php artisan queue:work --max-time=3600
